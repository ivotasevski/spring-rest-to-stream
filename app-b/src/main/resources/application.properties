server.port=8081

# register the beans (java.util.function.Consumer implementation) to act as the message consumer
spring.cloud.function.definition=MyQueueMessageConsumerOne;MyQueueMessageConsumerTwo

# bind the message consumer to the same RabbitMQ destination (my-queue)
spring.cloud.stream.bindings.MyQueueMessageConsumerOne-in-0.destination=my-destination
spring.cloud.stream.bindings.MyQueueMessageConsumerTwo-in-0.destination=my-destination

# register the consumers as part of the same group (if group has multiple consumers, only one will consume the message)
# this will also make the queue durable, so messages are not lost when there are no active consumers (AppB is down)
spring.cloud.stream.bindings.MyQueueMessageConsumerOne-in-0.group=MyQueue_MessageConsumer
spring.cloud.stream.bindings.MyQueueMessageConsumerTwo-in-0.group=MyQueue_MessageConsumer






